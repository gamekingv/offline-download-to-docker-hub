name: decompression-download
on:
  push:
    branches: [ main ]
    paths:
      - 'decompression-list.txt'
  workflow_dispatch:
    # inputs:
    #   type:
    #     description: 'dispatch type'
    #     required: false
    #     default: ''
    #   list:
    #     description: 'download list'
    #     required: false
    #     default: ''
    #   parent:
    #     description: 'parent run id'
    #     required: false
    #     default: ''

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '14'

      # 安装环境
      - name: Install Enviroment
        run: |
          sudo apt-get update
          sudo apt-get install unar
          npm install
          mkdir Offline
          node fetchtracker.js

      # 检查任务队列
      # - name: Queue Check
      #   run: |
      #     node queue-check.js
      #   env:
      #     QUEUE_TOKEN: ${{ github.token }}
      #     QUEUE_DB_HOST: ${{ secrets.DB_HOST }}
      #     QUEUE_DB_USERNAME: ${{ secrets.DB_USERNAME }}
      #     QUEUE_DB_PASSWORD: ${{ secrets.DB_PASSWORD }}

      # 下载
      - name: Download
        run: |
          echo "开始下载："
          cat decompression-list.txt
          aria2c --conf-path=aria2.conf --header="Cookie: ${{ secrets.EX_COOKIES }}" -i decompression-list.txt
          
      # 解压
      - name: Decompression
        run: |
          cd Offline
          echo "开始解压："
          ls | egrep '\.(rar|zip)$'
          echo ""
          ls | egrep '\.(rar|zip)$' | xargs -d '\n' -n1 -i unar "{}"
          
      # 上传
      - name: Upload
        run: |
          node upload.js
        env:
          QUEUE_DD_URL: ${{ secrets.URL }}
          QUEUE_DD_USERNAME: ${{ secrets.USERNAME }}
          QUEUE_DD_PASSWORD: ${{ secrets.PASSWORD }}
          QUEUE_DB_HOST: ${{ secrets.DB_HOST }}
          QUEUE_DB_USERNAME: ${{ secrets.DB_USERNAME }}
          QUEUE_DB_PASSWORD: ${{ secrets.DB_PASSWORD }}

      # 执行队列剩余任务
      # - name: Queue Pop
      #   run: |
      #     node queue-pop.js
      #   env:
      #     QUEUE_TOKEN: ${{ github.token }}
      #     QUEUE_DISPATCH_TOKEN: ${{ secrets.TOKEN }}
      #     QUEUE_DB_HOST: ${{ secrets.DB_HOST }}
      #     QUEUE_DB_USERNAME: ${{ secrets.DB_USERNAME }}
      #     QUEUE_DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
