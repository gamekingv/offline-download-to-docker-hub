name: big-torrent-download
on:
  push:
    branches: [ main ]
    paths:
      - 'big-torrent-list.txt'
  workflow_dispatch:
    inputs:
      type:
        description: 'torrent type'
        required: false
        default: ''
      torrent:
        description: 'base64 torrent or magnet'
        required: false
        default: ''
      file:
        description: 'last downloaded file index'
        required: false
        default: ''

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '14'

      # 安装环境
      - name: Install Enviroment
        run: |
          sudo apt-get update
          sudo apt-get install aria2
          sudo apt-get install transmission
          sudo apt-get install transmission-daemon
          npm install
          node fetchtracker.js

      # 下载种子
      - name: Save Torrent
        if: ${{ github.event.inputs.type == 'torrent' }}
        run: |
          node saveTorrent.js
      - name: Get Magnet
        if: ${{ github.event.inputs.type == 'magnet'}}
        run: |
          echo "${{ github.event.inputs.torrent }}"
          aria2c --conf-path=aria2.conf --bt-metadata-only=true --bt-save-metadata=true --follow-torrent=false --dir=./ "${{ github.event.inputs.torrent }}"
      - name: Get Torrent
        if: ${{ github.event.inputs.type == '' }}
        run: |
          cat big-torrent-list.txt
          aria2c --conf-path=aria2.conf --bt-metadata-only=true --bt-save-metadata=true --follow-torrent=false --dir=./ -i big-torrent-list.txt

      # 解析种子
      - name: Analyze
        run: |
          mkdir Offline
          cp *.torrent Offline
          node analyze.js

      # 下载
      - name: Download
        run: |
          cat list.txt
          aria2c --conf-path=aria2.conf --bt-save-metadata=true -i list.txt

      # 清理多余文件
      - name: Remove
        run: |
          node remove.js

      # 上传
      - name: Upload
        run: |
          node upload.js
        env:
          QUEUE_DD_URL: ${{ secrets.URL }}
          QUEUE_DD_USERNAME: ${{ secrets.USERNAME }}
          QUEUE_DD_PASSWORD: ${{ secrets.PASSWORD }}
          QUEUE_DB_URL: ${{ secrets.DB_URL }}
          QUEUE_DB_APIKEY: ${{ secrets.DB_APIKEY }}

      # 执行剩余任务
      - name: Dispatch Next Task
        run: |
          node dispatchNext.js
        env:
          QUEUE_DISPATCH_TOKEN: ${{ secrets.TOKEN }}
